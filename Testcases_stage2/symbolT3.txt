
PARSED SUCCESSFULLY
Line: 26: Error - ID declared again [q]
Line: 26: Error - ID declared again [r]
Line 28: Error - Undeclared variable: [y]
Line 32: Error - Undeclared variable: [v]
Line 36: Error - Assignop type Mismatch 
Line: 37: Error - ID declared again [b]
Line: 50: Error - ID declared again [abc_1]
Line 54: Error - Undeclared variable: [p]
Line 73: Error - Undeclared variable: [k]
Line: 74: Error - ID declared again [s]
Line 80: Error - Undeclared variable: [k]
Line 82: Error - Undeclared variable: [res_2]
Line 83: Error - Undeclared variable: [p]
Line 83: Error - Undeclared variable: [d]
Line: 84: Error - ID declared again [new]
Line 93: Error - ID v_1_2_43 not declared before use
Line: 98: Error - ID declared again [u1]


***************starting second traversal************
Line 96: Error - Variable k assigned before declaration
Line 96: Error - Type of v9 differs from input type of function
Line 96: Error - Number of input parameters differ.
Module Name: [var_demo], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in var_demo**	Var Name: [m], Scope: [var_demo, 9-40], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [7], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [n], Scope: [var_demo, 9-40], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [9], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [p], Scope: [var_demo, 9-40], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [3], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [u], Scope: [var_demo, 9-40], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [11], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [w], Scope: [var_demo, 9-40], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [x], Scope: [var_demo, 9-40], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in var_demo**	Var Name: [m], Scope: [var_demo, 9-40], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [value], Scope: [var_demo, 9-40], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [6], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [n], Scope: [var_demo, 9-40], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [5], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [q], Scope: [var_demo, 9-40], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [10], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [r], Scope: [var_demo, 9-40], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [14], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [w], Scope: [var_demo, 9-40], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [18], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [var_demo, 9-40], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [b], Scope: [var_demo, 9-40], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [c], Scope: [var_demo, 9-40], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [20], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in var_demo**	Var Name: [q], Scope: [var_demo, 19-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [r], Scope: [var_demo, 19-29], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [4], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [var_demo, 19-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [2], isAssigned: [1], isReturn: [0]
Module Name: [driverFunctionNode], isUsed: [0], isDefined: [1] astNode: [DRIVER_MOD_NODE]

**new stable started in driverFunctionNode**	Var Name: [v_1_2_3], Scope: [driverFunctionNode, 91-99], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [0], isReturn: [0]
	Var Name: [u1], Scope: [driverFunctionNode, 91-99], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [8], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [v7], Scope: [driverFunctionNode, 91-99], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [0], isAssigned: [0], isReturn: [0]
	Var Name: [result_], Scope: [driverFunctionNode, 91-99], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [v9], Scope: [driverFunctionNode, 91-99], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [6], nesting level: [0], isAssigned: [0], isReturn: [0]
Module Name: [compute], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in compute**	Var Name: [res_2__b], Scope: [compute, 46-87], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [13], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [s], Scope: [compute, 46-87], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [res_2_a], Scope: [compute, 46-87], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [11], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [res_1], Scope: [compute, 46-87], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [10], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [a], Scope: [compute, 46-87], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [compute, 46-87], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [c], Scope: [compute, 46-87], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [8], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in compute**	Var Name: [m], Scope: [compute, 46-87], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [15], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [pqr_2], Scope: [compute, 46-87], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [3], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [n], Scope: [compute, 46-87], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [16], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [abc_1], Scope: [compute, 46-87], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [1], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [s], Scope: [compute, 46-87], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [5], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [q4], Scope: [compute, 46-87], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [7], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [q5], Scope: [compute, 46-87], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [11], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [new], Scope: [compute, 46-87], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in compute**	Var Name: [abc_1], Scope: [compute, 61-81], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [w1], Scope: [compute, 61-81], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [w2], Scope: [compute, 61-81], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [2], isAssigned: [1], isReturn: [0]

**new stable started in compute**	Var Name: [s], Scope: [compute, 67-75], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [w1], Scope: [compute, 67-75], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [3], isAssigned: [1], isReturn: [0]

ALL MODULES WORKING CORRECTLY ON ALL GIVEN TESTCASES
	1.Grammar Table constructed from Grammar.txt
	2.First and Follow sets are automated from grammar table
	3.Parse Table generated from First and Follow sets
	4.Both Lexical and Syntax Analysis modules implemented
	5.Error Recovery also implemented

Enter a case [0: To exit], [1: To print without comments], [2: Call Lexer], [3: Call Both Lexer and Parser], [4: Print time to parse]:  