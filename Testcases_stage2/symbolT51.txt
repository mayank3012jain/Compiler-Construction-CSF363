
PARSED SUCCESSFULLY
Line 15: Error - Operation on array variables
Line 22: Error - NUM 25 Not In Range
Line 23: Error - Type Mismatch
Line 0 ERROR- While variable not changed
Line 25: Error - Operation on array variables
Line 48: Error - Type Mismatch
Line 58: Error - NUM 9 Not In Range
Line 60: Error - Assignop type Mismatch 
Line 64: Error - Type Mismatch
Line 69: Error - Assignop type Mismatch 
Line 74: Error - NUM 11 Not In Range
Line 92: Error - Assignop type Mismatch 
Line 97: Error - Type Mismatch
Line 98: Error - Type Mismatch
Line 102: Error - NUM 1 Not In Range
Line 104: Error - Assignop type Mismatch 
Line 107: Error - Assignop type (array size) Mismatch 


***************starting second traversal************
Module Name: [f1], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in f1**	Var Name: [m], Scope: [f1, 35-76], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [86], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [n], Scope: [f1, 35-76], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [87], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [a], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [b], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [41], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [c], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [82], nesting level: [0], isAssigned: [1], isReturn: [2]

**new stable started in f1**	Var Name: [k], Scope: [f1, 35-76], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [12], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [8], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [x], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [y], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [A], Scope: [f1, 35-76], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [14], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 35-76], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [27], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [81], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [40], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [u], Scope: [f1, 47-70], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [122], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [v], Scope: [f1, 47-70], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [126], nesting level: [2], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [A], Scope: [f1, 53-67], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [130], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 53-67], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [136], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [E], Scope: [f1, 53-67], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [177], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [Q], Scope: [f1, 53-67], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [134], nesting level: [3], isAssigned: [1], isReturn: [0]
Module Name: [var_demo_array], isUsed: [1], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in var_demo_array**	Var Name: [k], Scope: [var_demo_array, 8-29], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [45], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [m], Scope: [var_demo_array, 8-29], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [n], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [43], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [p], Scope: [var_demo_array, 8-29], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [39], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [x], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [2]

**new stable started in var_demo_array**	Var Name: [h], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [var_demo_array, 8-29], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [6], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in var_demo_array**	Var Name: [p], Scope: [var_demo_array, 18-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [43], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [u], Scope: [var_demo_array, 18-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [45], nesting level: [2], isAssigned: [0], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 18-24], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [47], nesting level: [2], isAssigned: [1], isReturn: [0]
Module Name: [driverFunctionNode], isUsed: [0], isDefined: [1] astNode: [DRIVER_MOD_NODE]

**new stable started in driverFunctionNode**	Var Name: [k], Scope: [driverFunctionNode, 81-108], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [5], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [value], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [88], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [v_1_2_3], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [p], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [6], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [q], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [92], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [r], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [96], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [u1], Scope: [driverFunctionNode, 81-108], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [4], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [w], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [100], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [A], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [driverFunctionNode, 81-108], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [10], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [driverFunctionNode, 81-108], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [47], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [driverFunctionNode, 81-108], Width: [41], isArray: YES, static array [20-40], Type: [INTEGER_NODE], offset: [102], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [84], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [86], nesting level: [0], isAssigned: [1], isReturn: [0]

ALL MODULES WORKING CORRECTLY ON ALL GIVEN TESTCASES
	1.Grammar Table constructed from Grammar.txt
	2.First and Follow sets are automated from grammar table
	3.Parse Table generated from First and Follow sets
	4.Both Lexical and Syntax Analysis modules implemented
	5.Error Recovery also implemented

Enter a case [0: To exit], [1: To print without comments], [2: Call Lexer], [3: Call Both Lexer and Parser], [4: Print time to parse]:  Module Name: [f1], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in f1**	Var Name: [m], Scope: [f1, 35-76], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [86], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [n], Scope: [f1, 35-76], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [87], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [a], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [b], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [41], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [c], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [82], nesting level: [0], isAssigned: [1], isReturn: [2]

**new stable started in f1**	Var Name: [k], Scope: [f1, 35-76], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [12], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [8], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [x], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [y], Scope: [f1, 35-76], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [A], Scope: [f1, 35-76], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [14], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 35-76], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [27], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [81], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [f1, 35-76], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [40], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [u], Scope: [f1, 47-70], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [122], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [v], Scope: [f1, 47-70], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [126], nesting level: [2], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [A], Scope: [f1, 53-67], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [130], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 53-67], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [136], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [E], Scope: [f1, 53-67], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [177], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [Q], Scope: [f1, 53-67], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [134], nesting level: [3], isAssigned: [1], isReturn: [0]
Module Name: [var_demo_array], isUsed: [1], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in var_demo_array**	Var Name: [k], Scope: [var_demo_array, 8-29], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [45], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [m], Scope: [var_demo_array, 8-29], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [n], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [43], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [p], Scope: [var_demo_array, 8-29], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [39], nesting level: [0], isAssigned: [1], isReturn: [2]
	Var Name: [x], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [2]

**new stable started in var_demo_array**	Var Name: [h], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [var_demo_array, 8-29], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [6], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 8-29], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in var_demo_array**	Var Name: [p], Scope: [var_demo_array, 18-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [43], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [u], Scope: [var_demo_array, 18-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [45], nesting level: [2], isAssigned: [0], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 18-24], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [47], nesting level: [2], isAssigned: [1], isReturn: [0]
Module Name: [driverFunctionNode], isUsed: [0], isDefined: [1] astNode: [DRIVER_MOD_NODE]

**new stable started in driverFunctionNode**	Var Name: [k], Scope: [driverFunctionNode, 81-108], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [5], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [value], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [88], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [v_1_2_3], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [p], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [6], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [q], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [92], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [r], Scope: [driverFunctionNode, 81-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [96], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [u1], Scope: [driverFunctionNode, 81-108], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [4], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [w], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [100], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [A], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [driverFunctionNode, 81-108], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [10], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [driverFunctionNode, 81-108], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [47], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [driverFunctionNode, 81-108], Width: [41], isArray: YES, static array [20-40], Type: [INTEGER_NODE], offset: [102], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [84], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [driverFunctionNode, 81-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [86], nesting level: [0], isAssigned: [1], isReturn: [0]
Enter a case [0: To exit], [1: To print without comments], [2: Call Lexer], [3: Call Both Lexer and Parser], [4: Print time to parse]:  