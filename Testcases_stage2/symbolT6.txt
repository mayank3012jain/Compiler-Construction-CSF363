
PARSED SUCCESSFULLY
Line 37: Error - Operation on array variables
Line 48: Error - NUM 25 Not In Range
Line 49: Error - Type Mismatch
Line 53: Error - Operation on array variables
Line 85: Error - Type Mismatch
Line 97: Error - NUM 9 Not In Range
Line 99: Error - Assignop type Mismatch 
Line 104: Error - Type Mismatch
Line 110: Error - Assignop type Mismatch 
Line 115: Error - NUM 11 Not In Range
Line 133: Error - Assignop type Mismatch 
Line 138: Error - Type Mismatch
Line 139: Error - Type Mismatch
Line 143: Error - NUM 1 Not In Range
Line 145: Error - Assignop type Mismatch 
Line 148: Error - Assignop type (array size) Mismatch 


***************starting second traversal************
Line 51: Error - Type of v3 differs from input type of function
Line 56: Error - Type of b7 differs from input type of function
Line 56: Error - Type Mismatch
Line 82: Error - Type Mismatch
Line 90: Error - Type of var4 differs from input type of function
Line 102: Error - Type of u differs from return type of function
Line 107: Error - Number of return parameters differ.
Module Name: [f1], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in f1**	Var Name: [m], Scope: [f1, 64-117], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [84], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [n], Scope: [f1, 64-117], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [85], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [a], Scope: [f1, 64-117], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [f1, 64-117], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [40], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [c], Scope: [f1, 64-117], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [80], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [k], Scope: [f1, 64-117], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [12], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [f1, 64-117], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [8], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [Var1], Scope: [f1, 64-117], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [174], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [x], Scope: [f1, 64-117], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [y], Scope: [f1, 64-117], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [Var2], Scope: [f1, 64-117], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [234], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [Var3], Scope: [f1, 64-117], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [50], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [var4], Scope: [f1, 64-117], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [100], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [A], Scope: [f1, 64-117], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [150], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 64-117], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [162], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [f1, 64-117], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [334], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [f1, 64-117], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [294], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [E], Scope: [f1, 64-117], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [14], nesting level: [1], isAssigned: [0], isReturn: [0]

**new stable started in f1**	Var Name: [u], Scope: [f1, 84-111], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [v], Scope: [f1, 84-111], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [int1], Scope: [f1, 84-111], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [8], nesting level: [2], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [A], Scope: [f1, 92-108], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 92-108], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [6], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [E], Scope: [f1, 92-108], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [46], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [Q], Scope: [f1, 92-108], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [3], isAssigned: [1], isReturn: [0]
Module Name: [function1], isUsed: [1], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in function1**	Var Name: [q], Scope: [function1, 13-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [116], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [data], Scope: [function1, 13-24], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [length], Scope: [function1, 13-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [54], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [weight], Scope: [function1, 13-24], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [50], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [R1], Scope: [function1, 13-24], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [118], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [R2], Scope: [function1, 13-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [122], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [R3], Scope: [function1, 13-24], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [124], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [R4], Scope: [function1, 13-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [125], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [b], Scope: [function1, 13-24], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [56], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in function1**	Var Name: [e], Scope: [function1, 13-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [f], Scope: [function1, 13-24], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [g], Scope: [function1, 13-24], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [h], Scope: [function1, 13-24], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [54], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [function1, 13-24], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [104], nesting level: [1], isAssigned: [1], isReturn: [0]
Module Name: [var_demo_array], isUsed: [1], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in var_demo_array**	Var Name: [k], Scope: [var_demo_array, 29-58], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [44], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [m], Scope: [var_demo_array, 29-58], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [n], Scope: [var_demo_array, 29-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [42], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [p], Scope: [var_demo_array, 29-58], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [38], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [x], Scope: [var_demo_array, 29-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in var_demo_array**	Var Name: [b4], Scope: [var_demo_array, 29-58], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [6], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [h], Scope: [var_demo_array, 29-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [b7], Scope: [var_demo_array, 29-58], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [100], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [var_demo_array, 29-58], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [56], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [v1], Scope: [var_demo_array, 29-58], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [92], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [v2], Scope: [var_demo_array, 29-58], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [96], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [a], Scope: [var_demo_array, 29-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 29-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in var_demo_array**	Var Name: [b5], Scope: [var_demo_array, 42-52], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [40], nesting level: [2], isAssigned: [0], isReturn: [0]
	Var Name: [b6], Scope: [var_demo_array, 42-52], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [100], nesting level: [2], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [var_demo_array, 42-52], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [u], Scope: [var_demo_array, 42-52], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [v3], Scope: [var_demo_array, 42-52], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [160], nesting level: [2], isAssigned: [0], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 42-52], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [4], nesting level: [2], isAssigned: [1], isReturn: [0]
Module Name: [driverFunctionNode], isUsed: [0], isDefined: [1] astNode: [DRIVER_MOD_NODE]

**new stable started in driverFunctionNode**	Var Name: [k], Scope: [driverFunctionNode, 122-149], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [5], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [value], Scope: [driverFunctionNode, 122-149], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [86], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [v_1_2_3], Scope: [driverFunctionNode, 122-149], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [p], Scope: [driverFunctionNode, 122-149], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [6], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [q], Scope: [driverFunctionNode, 122-149], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [90], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [r], Scope: [driverFunctionNode, 122-149], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [94], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [u1], Scope: [driverFunctionNode, 122-149], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [4], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [w], Scope: [driverFunctionNode, 122-149], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [98], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [A], Scope: [driverFunctionNode, 122-149], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [driverFunctionNode, 122-149], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [10], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [driverFunctionNode, 122-149], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [46], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [driverFunctionNode, 122-149], Width: [41], isArray: YES, static array [20-40], Type: [INTEGER_NODE], offset: [100], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [driverFunctionNode, 122-149], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [82], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [driverFunctionNode, 122-149], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [84], nesting level: [0], isAssigned: [1], isReturn: [0]

ALL MODULES WORKING CORRECTLY ON ALL GIVEN TESTCASES
	1.Grammar Table constructed from Grammar.txt
	2.First and Follow sets are automated from grammar table
	3.Parse Table generated from First and Follow sets
	4.Both Lexical and Syntax Analysis modules implemented
	5.Error Recovery also implemented

Enter a case [0: To exit], [1: To print without comments], [2: Call Lexer], [3: Call Both Lexer and Parser], [4: Print time to parse]:  