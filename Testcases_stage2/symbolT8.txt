
PARSED SUCCESSFULLY
Line 29: Error - Operation on array variables
Line 40: Error - NUM 25 Not In Range
Line 41: Error - Type Mismatch
Line 45: Error - Operation on array variables
Line 50: Error - Returned parameters not assigned
Line 56 Error - Recursive calls not allowed
Line 86: Error - Type Mismatch
Line 98: Error - NUM 9 Not In Range
Line 100: Error - Assignop type Mismatch 
Line 105: Error - Type Mismatch
Line 111: Error - Assignop type Mismatch 
Line 112: Error - Loop variable [k] is changed inside the loop
Line 114: Error - Module [function3] Not Found
Line 117: Error - NUM 11 Not In Range
Line 119: Error - Returned parameters not assigned
Line 130: Error - Module [function4] declared but not used before Definition
Line 137: Error - Module [function3] defined again.
Line 158: Error - Assignop type Mismatch 
Line 163: Error - Type Mismatch
Line 164: Error - Type Mismatch
Line 168: Error - NUM 1 Not In Range
Line 170: Error - Assignop type Mismatch 
Line 173: Error - Assignop type (array size) Mismatch 
Line 189 Error - Recursive calls not allowed
Line 192: Error - Returned parameters not assigned
Line 194: Error - Module [function1] defined again.


***************starting second traversal************
Line 43: Error - Type of v3 differs from input type of function
Line 48: Error - Type of b7 differs from input type of function
Line 48: Error - Type Mismatch
Line 83: Error - Type Mismatch
Line 91: Error - Variable Var4 used before declaration
Line 103: Error - Type of u differs from return type of function
Line 108: Error - Number of return parameters differ.
Module Name: [f1], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in f1**	Var Name: [m], Scope: [f1, 64-119], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [84], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [n], Scope: [f1, 64-119], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [85], nesting level: [0], isAssigned: [0], isReturn: [1]
	Var Name: [a], Scope: [f1, 64-119], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [f1, 64-119], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [40], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [c], Scope: [f1, 64-119], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [80], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [k], Scope: [f1, 64-119], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [12], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [p], Scope: [f1, 64-119], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [8], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [Var1], Scope: [f1, 64-119], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [176], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [y1], Scope: [f1, 64-119], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [14], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [x], Scope: [f1, 64-119], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [y], Scope: [f1, 64-119], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [Var2], Scope: [f1, 64-119], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [236], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [Var3], Scope: [f1, 64-119], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [52], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [var4], Scope: [f1, 64-119], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [102], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [A], Scope: [f1, 64-119], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [152], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 64-119], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [164], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [f1, 64-119], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [336], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [f1, 64-119], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [296], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [E], Scope: [f1, 64-119], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [16], nesting level: [1], isAssigned: [0], isReturn: [0]

**new stable started in f1**	Var Name: [u], Scope: [f1, 85-112], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [v], Scope: [f1, 85-112], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [int1], Scope: [f1, 85-112], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [8], nesting level: [2], isAssigned: [1], isReturn: [0]

**new stable started in f1**	Var Name: [A], Scope: [f1, 93-109], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [f1, 93-109], Width: [41], isArray: YES, static array [10-30], Type: [INTEGER_NODE], offset: [6], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [E], Scope: [f1, 93-109], Width: [13], isArray: YES, static array [4-10], Type: [INTEGER_NODE], offset: [46], nesting level: [3], isAssigned: [1], isReturn: [0]
	Var Name: [Q], Scope: [f1, 93-109], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [3], isAssigned: [1], isReturn: [0]
Module Name: [function1], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in function1**	Var Name: [q], Scope: [function1, 179-192], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [116], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [data], Scope: [function1, 179-192], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [length], Scope: [function1, 179-192], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [54], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [weight], Scope: [function1, 179-192], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [50], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [R1], Scope: [function1, 179-192], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [118], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [R2], Scope: [function1, 179-192], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [122], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [R3], Scope: [function1, 179-192], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [124], nesting level: [0], isAssigned: [0], isReturn: [1]
	Var Name: [R4], Scope: [function1, 179-192], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [125], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [b], Scope: [function1, 179-192], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [56], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in function1**	Var Name: [e], Scope: [function1, 179-192], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [f], Scope: [function1, 179-192], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [g], Scope: [function1, 179-192], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [h], Scope: [function1, 179-192], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [54], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [p1], Scope: [function1, 179-192], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [108], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [a], Scope: [function1, 179-192], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [104], nesting level: [1], isAssigned: [1], isReturn: [0]
Module Name: [function2], isUsed: [1], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in function2**	Var Name: [x], Scope: [function2, 54-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [y], Scope: [function2, 54-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in function2**	Var Name: [temp], Scope: [function2, 54-58], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
Module Name: [function3], isUsed: [0], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in function3**	Var Name: [a], Scope: [function3, 126-128], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [function3, 126-128], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [4], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [c], Scope: [function3, 126-128], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [8], nesting level: [0], isAssigned: [1], isReturn: [1]

**new stable started in function3**Module Name: [var_demo_array], isUsed: [1], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in var_demo_array**	Var Name: [k], Scope: [var_demo_array, 20-50], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [44], nesting level: [0], isAssigned: [1], isReturn: [1]
	Var Name: [m], Scope: [var_demo_array, 20-50], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [n], Scope: [var_demo_array, 20-50], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [42], nesting level: [0], isAssigned: [0], isReturn: [1]
	Var Name: [p], Scope: [var_demo_array, 20-50], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [38], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [x], Scope: [var_demo_array, 20-50], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]

**new stable started in var_demo_array**	Var Name: [b4], Scope: [var_demo_array, 20-50], Width: [51], isArray: YES, static array [100-150], Type: [BOOLEAN_NODE], offset: [6], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [h], Scope: [var_demo_array, 20-50], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [4], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [b7], Scope: [var_demo_array, 20-50], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [100], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [var_demo_array, 20-50], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [56], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [v1], Scope: [var_demo_array, 20-50], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [92], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [v2], Scope: [var_demo_array, 20-50], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [96], nesting level: [1], isAssigned: [0], isReturn: [0]
	Var Name: [a], Scope: [var_demo_array, 20-50], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [1], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 20-50], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [1], isAssigned: [1], isReturn: [0]

**new stable started in var_demo_array**	Var Name: [b5], Scope: [var_demo_array, 34-44], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [40], nesting level: [2], isAssigned: [0], isReturn: [0]
	Var Name: [b6], Scope: [var_demo_array, 34-44], Width: [61], isArray: YES, static array [35-50], Type: [REAL_NODE], offset: [100], nesting level: [2], isAssigned: [0], isReturn: [0]
	Var Name: [p], Scope: [var_demo_array, 34-44], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [u], Scope: [var_demo_array, 34-44], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [v3], Scope: [var_demo_array, 34-44], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [160], nesting level: [2], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [var_demo_array, 34-44], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [4], nesting level: [2], isAssigned: [1], isReturn: [0]
Module Name: [function4], isUsed: [1], isDefined: [1] astNode: [MODULE_NODE]

**new stable started in function4**	Var Name: [a], Scope: [function4, 133-135], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [function4, 133-135], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [1], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [c], Scope: [function4, 133-135], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [1]

**new stable started in function4**Module Name: [driverFunctionNode], isUsed: [0], isDefined: [1] astNode: [DRIVER_MOD_NODE]

**new stable started in driverFunctionNode**	Var Name: [k], Scope: [driverFunctionNode, 146-174], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [6], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [value], Scope: [driverFunctionNode, 146-174], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [87], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [v_1_2_3], Scope: [driverFunctionNode, 146-174], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [0], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [p], Scope: [driverFunctionNode, 146-174], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [7], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [q], Scope: [driverFunctionNode, 146-174], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [91], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [r], Scope: [driverFunctionNode, 146-174], Width: [4], isArray: NO, ------ [--], Type: [REAL_NODE], offset: [95], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [u1], Scope: [driverFunctionNode, 146-174], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [4], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [u2], Scope: [driverFunctionNode, 146-174], Width: [1], isArray: NO, ------ [--], Type: [BOOLEAN_NODE], offset: [5], nesting level: [0], isAssigned: [0], isReturn: [0]
	Var Name: [w], Scope: [driverFunctionNode, 146-174], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [99], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [A], Scope: [driverFunctionNode, 146-174], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [2], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [B], Scope: [driverFunctionNode, 146-174], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [11], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [C], Scope: [driverFunctionNode, 146-174], Width: [37], isArray: YES, static array [2-20], Type: [INTEGER_NODE], offset: [47], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [D], Scope: [driverFunctionNode, 146-174], Width: [41], isArray: YES, static array [20-40], Type: [INTEGER_NODE], offset: [101], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [a], Scope: [driverFunctionNode, 146-174], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [83], nesting level: [0], isAssigned: [1], isReturn: [0]
	Var Name: [b], Scope: [driverFunctionNode, 146-174], Width: [2], isArray: NO, ------ [--], Type: [INTEGER_NODE], offset: [85], nesting level: [0], isAssigned: [1], isReturn: [0]

ALL MODULES WORKING CORRECTLY ON ALL GIVEN TESTCASES
	1.Grammar Table constructed from Grammar.txt
	2.First and Follow sets are automated from grammar table
	3.Parse Table generated from First and Follow sets
	4.Both Lexical and Syntax Analysis modules implemented
	5.Error Recovery also implemented

Enter a case [0: To exit], [1: To print without comments], [2: Call Lexer], [3: Call Both Lexer and Parser], [4: Print time to parse]:  